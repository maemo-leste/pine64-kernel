Message-ID: <CAJ+kdVEV4FHZESa6cd40+_5MvDQLgW=yP9gSLTLsjPf4zOvyWA@mail.gmail.com>
Subject: [PATCH 2/2] media: ov5640: Add HBLANK and VBLANK controls

---
 drivers/media/i2c/ov5640.c | 26 ++++++++++++++++++++++++++
 1 file changed, 26 insertions(+)

diff --git a/drivers/media/i2c/ov5640.c b/drivers/media/i2c/ov5640.c
index 38811f1aa3f8..0af97d6611b4 100644
--- a/drivers/media/i2c/ov5640.c
+++ b/drivers/media/i2c/ov5640.c
@@ -237,6 +237,8 @@ struct ov5640_mode_info {
 struct ov5640_ctrls {
     struct v4l2_ctrl_handler handler;
     struct v4l2_ctrl *pixel_rate;
+    struct v4l2_ctrl *hblank;
+    struct v4l2_ctrl *vblank;
     struct {
         struct v4l2_ctrl *auto_exp;
         struct v4l2_ctrl *exposure;
@@ -1603,6 +1605,16 @@ static u64 ov5640_calc_pixel_rate(struct
ov5640_dev *sensor)
     return rate;
 }

+static s32 ov5640_calc_hblank(struct ov5640_dev *sensor)
+{
+    return sensor->current_mode->htot - sensor->current_mode->hact;
+}
+
+static s32 ov5640_calc_vblank(struct ov5640_dev *sensor)
+{
+    return sensor->current_mode->vtot - sensor->current_mode->vact;
+}
+
 /*
  * sensor changes between scaling and subsampling, go through
  * exposure calculation
@@ -2450,6 +2462,10 @@ static int ov5640_set_fmt(struct v4l2_subdev *sd,

         __v4l2_ctrl_s_ctrl_int64(sensor->ctrls.pixel_rate,
                      ov5640_calc_pixel_rate(sensor));
+        __v4l2_ctrl_s_ctrl(sensor->ctrls.hblank,
+                   ov5640_calc_hblank(sensor));
+        __v4l2_ctrl_s_ctrl(sensor->ctrls.vblank,
+                   ov5640_calc_vblank(sensor));
     }
 out:
     mutex_unlock(&sensor->lock);
@@ -2990,6 +3006,14 @@ static int ov5640_init_controls(struct
ov5640_dev *sensor)
                           0, INT_MAX, 1,
                           ov5640_calc_pixel_rate(sensor));

+    ctrls->hblank = v4l2_ctrl_new_std(hdl, ops, V4L2_CID_HBLANK,
+                      0, INT_MAX, 1,
+                      ov5640_calc_hblank(sensor));
+
+    ctrls->vblank = v4l2_ctrl_new_std(hdl, ops, V4L2_CID_VBLANK,
+                      0, INT_MAX, 1,
+                      ov5640_calc_vblank(sensor));
+
     /* Auto/manual white balance */
     ctrls->auto_wb = v4l2_ctrl_new_std(hdl, ops,
                        V4L2_CID_AUTO_WHITE_BALANCE,
@@ -3052,6 +3076,8 @@ static int ov5640_init_controls(struct ov5640_dev *sensor)
     }

     ctrls->pixel_rate->flags |= V4L2_CTRL_FLAG_READ_ONLY;
+    ctrls->hblank->flags |= V4L2_CTRL_FLAG_READ_ONLY;
+    ctrls->vblank->flags |= V4L2_CTRL_FLAG_READ_ONLY;
     ctrls->gain->flags |= V4L2_CTRL_FLAG_VOLATILE;
     ctrls->exposure->flags |= V4L2_CTRL_FLAG_VOLATILE;

-- 
2.25.1