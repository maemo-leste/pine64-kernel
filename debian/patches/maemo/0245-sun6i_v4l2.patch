--- a/drivers/media/platform/sunxi/sun6i-csi/sun6i_video.c	2022-06-29 20:06:58.278712827 +0300
+++ b/drivers/media/platform/sunxi/sun6i-csi/sun6i_video.c	2022-06-29 20:42:59.656037722 +0300
@@ -339,7 +339,115 @@
 	if (index >= ARRAY_SIZE(supported_pixformats))
 		return -EINVAL;
 
-	f->pixelformat = supported_pixformats[index];
+
+	if (f->mbus_code == 0) {
+		f->pixelformat = supported_pixformats[index];
+		return 0;
+	}
+
+	if (index == 0) {
+		switch (f->mbus_code) {
+		case MEDIA_BUS_FMT_SBGGR8_1X8:
+			f->pixelformat = V4L2_PIX_FMT_SBGGR8;
+			return 0;
+		case MEDIA_BUS_FMT_SGBRG8_1X8:
+			f->pixelformat = V4L2_PIX_FMT_SGBRG8;
+			return 0;
+		case MEDIA_BUS_FMT_SGRBG8_1X8:
+			f->pixelformat = V4L2_PIX_FMT_SGRBG8;
+			return 0;
+		case MEDIA_BUS_FMT_SRGGB8_1X8:
+			f->pixelformat = V4L2_PIX_FMT_SRGGB8;
+			return 0;
+		case MEDIA_BUS_FMT_SBGGR10_1X10:
+			f->pixelformat = V4L2_PIX_FMT_SBGGR10;
+			return 0;
+		case MEDIA_BUS_FMT_SGBRG10_1X10:
+			f->pixelformat = V4L2_PIX_FMT_SGBRG10;
+			return 0;
+		case MEDIA_BUS_FMT_SGRBG10_1X10:
+			f->pixelformat = V4L2_PIX_FMT_SGRBG10;
+			return 0;
+		case MEDIA_BUS_FMT_SRGGB10_1X10:
+			f->pixelformat = V4L2_PIX_FMT_SRGGB10;
+			return 0;
+		case MEDIA_BUS_FMT_SBGGR12_1X12:
+			f->pixelformat = V4L2_PIX_FMT_SBGGR12;
+			return 0;
+		case MEDIA_BUS_FMT_SGBRG12_1X12:
+			f->pixelformat = V4L2_PIX_FMT_SGBRG12;
+			return 0;
+		case MEDIA_BUS_FMT_SGRBG12_1X12:
+			f->pixelformat = V4L2_PIX_FMT_SGRBG12;
+			return 0;
+		case MEDIA_BUS_FMT_SRGGB12_1X12:
+			f->pixelformat = V4L2_PIX_FMT_SRGGB12;
+			return 0;
+		case MEDIA_BUS_FMT_RGB555_2X8_PADHI_LE:
+			f->pixelformat = V4L2_PIX_FMT_RGB555;
+			return 0;
+		case MEDIA_BUS_FMT_RGB565_2X8_BE:
+			f->pixelformat = V4L2_PIX_FMT_RGB565X;
+			return 0;
+		case MEDIA_BUS_FMT_RGB565_2X8_LE:
+			f->pixelformat = V4L2_PIX_FMT_RGB565;
+			return 0;
+		case MEDIA_BUS_FMT_YUYV8_2X8:
+			f->pixelformat = V4L2_PIX_FMT_YUYV;
+			return 0;
+		case MEDIA_BUS_FMT_YVYU8_2X8:
+			f->pixelformat = V4L2_PIX_FMT_YVYU;
+			return 0;
+		case MEDIA_BUS_FMT_UYVY8_2X8:
+			f->pixelformat = V4L2_PIX_FMT_UYVY;
+			return 0;
+		case MEDIA_BUS_FMT_VYUY8_2X8:
+			f->pixelformat = V4L2_PIX_FMT_VYUY;
+			return 0;
+		case MEDIA_BUS_FMT_JPEG_1X8:
+			f->pixelformat = V4L2_PIX_FMT_JPEG;
+			return 0;
+		default:
+			return -EINVAL;
+		}
+	} else {
+		switch (f->mbus_code) {
+		case MEDIA_BUS_FMT_UYVY8_2X8:
+		case MEDIA_BUS_FMT_VYUY8_2X8:
+		case MEDIA_BUS_FMT_YUYV8_2X8:
+		case MEDIA_BUS_FMT_YVYU8_2X8:
+			switch (index) {
+			case 1:
+				f->pixelformat = V4L2_PIX_FMT_HM12;
+				return 0;
+			case 2:
+				f->pixelformat = V4L2_PIX_FMT_NV12;
+				return 0;
+			case 3:
+				f->pixelformat = V4L2_PIX_FMT_NV21;
+				return 0;
+			case 4:
+				f->pixelformat = V4L2_PIX_FMT_NV16;
+				return 0;
+			case 5:
+				f->pixelformat = V4L2_PIX_FMT_NV61;
+				return 0;
+			case 6:
+				f->pixelformat = V4L2_PIX_FMT_YUV420;
+				return 0;
+			case 7:
+				f->pixelformat = V4L2_PIX_FMT_YVU420;
+				return 0;
+			case 8:
+				f->pixelformat = V4L2_PIX_FMT_YUV422P;
+				return 0;
+			default:
+				return -EINVAL;
+			}
+		default:
+			return -EINVAL;
+		}
+	}
 
 	return 0;
 }
@@ -420,6 +528,39 @@
 	return sun6i_video_try_fmt(video, f);
 }
 
+static int vidioc_enum_framesizes(struct file *file, void *priv,
+                  struct v4l2_frmsizeenum *f)
+{
+    if (f->index != 0)
+        return -EINVAL;
+
+    f->type = V4L2_FRMSIZE_TYPE_CONTINUOUS;
+    f->stepwise.min_width = MIN_WIDTH;
+    f->stepwise.max_width = MAX_WIDTH;
+    f->stepwise.step_width = 1;
+    f->stepwise.min_height = MIN_HEIGHT;
+    f->stepwise.max_height = MAX_HEIGHT;
+    f->stepwise.step_height = 1;
+    return 0;
+}
+
+static int vidioc_enum_frameintervals(struct file *file, void *priv,
+                      struct v4l2_frmivalenum *f)
+{
+    if (f->index > 0)
+        return -EINVAL;
+
+    f->type = V4L2_FRMIVAL_TYPE_CONTINUOUS;
+    f->stepwise.min.denominator = 2;
+    f->stepwise.min.numerator = 1;
+    // Unknown limit
+    f->stepwise.max.denominator = 120;
+    f->stepwise.max.numerator = 1;
+    f->stepwise.step.denominator = 1;
+    f->stepwise.step.numerator = 1;
+    return 0;
+}
+
 static int vidioc_enum_input(struct file *file, void *fh,
 			     struct v4l2_input *inp)
 {
@@ -480,6 +621,9 @@
 	.vidioc_s_fmt_vid_cap		= vidioc_s_fmt_vid_cap,
 	.vidioc_try_fmt_vid_cap		= vidioc_try_fmt_vid_cap,
 
+    .vidioc_enum_framesizes        = vidioc_enum_framesizes,
+    .vidioc_enum_frameintervals    = vidioc_enum_frameintervals,
+
 	.vidioc_enum_input		= vidioc_enum_input,
 	.vidioc_s_input			= vidioc_s_input,
 	.vidioc_g_input			= vidioc_g_input,
@@ -706,7 +850,8 @@
 	vdev->v4l2_dev		= &csi->v4l2_dev;
 	vdev->queue		= vidq;
 	vdev->lock		= &video->lock;
-	vdev->device_caps	= V4L2_CAP_STREAMING | V4L2_CAP_VIDEO_CAPTURE;
+	vdev->device_caps	= V4L2_CAP_STREAMING |
+		V4L2_CAP_VIDEO_CAPTURE | V4L2_CAP_IO_MC;
 	video_set_drvdata(vdev, video);
 
 	ret = video_register_device(vdev, VFL_TYPE_VIDEO, -1);
